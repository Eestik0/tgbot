import telebot
from telebot import types
import webbrowser
import pyjokes
import random
import re
import os
import requests
from openai import OpenAI

bot = telebot.TeleBot(os.environ.get('TELEGRAM_BOT_TOKEN'))
# the newest OpenAI model is "gpt-4o" which works best for this use case
openai_client = OpenAI(api_key=os.environ.get('OPENAI_API_KEY'))

# –î–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —Ä–µ–∂–∏–º—É –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫
user_waiting_for_text = {}

# –Ω–∞—Å—Ç—Ä—ñ–π
moods = ["üòá –∞–Ω–≥–µ–ª", "üôÇ —Å–ø–æ–∫—ñ–π–Ω–∞", "üòè –≥—Ä–∞–π–ª–∏–≤–∞", "üò† –∑–ª–∞", "üòà —Å–∞—Ç–∞–Ω–∞"]
current_mood = random.choice(moods)

def random_mood():
    global current_mood
    if random.random() < 0.2:  # 20% —à–∞–Ω—Å –∑–º—ñ–Ω–∏—Ç–∏ –Ω–∞—Å—Ç—Ä—ñ–π
        current_mood = random.choice(moods)

# —Ñ—Ä–∞–∑–∏ –¥–ª—è –≤–∏–ø–∞–¥–∫–æ–≤–∏—Ö —Ä–µ–∞–∫—Ü—ñ–π (~20)
random_phrases = [
    "–•–º–º, —Ü—ñ–∫–∞–≤–æ ü§î",
    "–ú–æ—è —Å–∞—Ç–∞–Ω–∏–Ω—Å—å–∫–∞ —Å—Ç–æ—Ä–æ–Ω–∞ –∫–∞–∂–µ '–Ω—ñ' üòà",
    "–ê–Ω–≥–µ–ª—å—Å—å–∫–∞ ‚Äî '—Ç–∞–∫' üòá",
    "–Ø —Ç—É—Ç, —Å–ª—É—Ö–∞—é üëÇ",
    "–©–æ —Å—Ç–∞–ª–æ—Å—è, –∫–æ—Ç–∏–∫—É? üò∏",
    "–ì–∞? –Ø –∑–∞–¥—É–º–∞–ª–∞—Å—å...",
    "–ê —è –≤–∂–µ —Å–∫—É—á–∏–ª–∞ ü•∫",
    "–¶–µ –∂–∞—Ä—Ç –±—É–≤? –ë–æ —è –º–∞–π–∂–µ –∑–∞—Å–º—ñ—è–ª–∞—Å—å üòè",
    "–ú–æ–∂–µ, –ø–æ—è—Å–Ω–∏—à –ø—Ä–æ—Å—Ç—ñ—à–µ?",
    "–°–∫–∞–∂–∏ —â–µ —Ä–∞–∑, –∞–ª–µ –ø–æ–≤—ñ–ª—å–Ω—ñ—à–µ üòÑ",
    "–û, —Ü–µ –≤–∏–≥–ª—è–¥–∞—î —Ü—ñ–∫–∞–≤–æ!",
    "–Ø –ø–æ—á—É–≤–∞—é—Å—è –¥–∏–≤–Ω–æ —Å—å–æ–≥–æ–¥–Ω—ñ‚Ä¶",
    "–•–∞-—Ö–∞, —è –º–∞–π–∂–µ –∑–∞—Å–º—ñ—è–ª–∞—Å—å üòÖ",
    "–ú—ñ–π –Ω–∞—Å—Ç—Ä—ñ–π –∫–æ–ª–∏–≤–∞—î—Ç—å—Å—è –≤—ñ–¥ –∞–Ω–≥–µ–ª–∞ –¥–æ —Å–∞—Ç–∞–Ω–∏ üòàüòá",
    "–ú–º–º, –Ω–µ –≤–ø–µ–≤–Ω–µ–Ω–∞, —á–∏ —Ü–µ —Ö–æ—Ä–æ—à–∞ —ñ–¥–µ—è...",
    "–û–∫–µ–π, —è –ø—Ä–∏–π–º–∞—é —Ü–µ –¥–æ —É–≤–∞–≥–∏!",
    "–•–º, –º–æ–∂–ª–∏–≤–æ, —Ü–µ —Å–µ–∫—Ä–µ—Ç ü§´",
    "–Ø –±–∞—á—É, —Ç–∏ –Ω–∞–º–∞–≥–∞—î—à—Å—è –º–µ–Ω–µ —Å–ø–∞–Ω—Ç–µ–ª–∏—á–∏—Ç–∏ üòè",
    "–û–≥–æ, —Ü—ñ–∫–∞–≤–æ, —â–æ –±—É–¥–µ –¥–∞–ª—ñ!",
    "–Ø –ø—Ä–æ—Å—Ç–æ —Ç—É—Ç, —â–æ–± –º–∏–ª–æ –ø–æ—Å–º—ñ—Ö–∞—Ç–∏—Å—è üôÇ"
]

# –ö–æ–º–∞–Ω–¥–∏
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('‚úçÔ∏è –í–∏–ø—Ä–∞–≤–∏—Ç–∏ —Ç–µ–∫—Å—Ç', 'üåê –ú—ñ–π —Å–∞–π—Ç')
    markup.row('üòÑ –ñ–∞—Ä—Ç', 'üí™ –ü–æ—Ç—É–∂–Ω—ñ—Å—Ç—å', 'üéØ –®–∞–Ω—Å')
    
    bot.send_message(
        message.chat.id,
        f'–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name}! –Ø ‚Äî –ù–µ–ª—è {current_mood} üòÑ\n\n'
        '–ö–æ–º–∞–Ω–¥–∏:\n'
        '/fix ‚Äî –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–º–∏–ª–∫–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é ‚úçÔ∏è\n'
        '/help ‚Äî –¥–æ–ø–æ–º–æ–≥–∞\n'
        '/site ‚Äî –º—ñ–π —Å–∞–π—Ç üåê\n'
        '/menu ‚Äî –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ\n'
        '/joke ‚Äî —Ä–æ–∑–ø–æ–≤—ñ—Å—Ç–∏ –∂–∞—Ä—Ç\n'
        '/power ‚Äî –≤–∏–ø–∞–¥–∫–æ–≤–∞ –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å\n'
        '/chance ‚Äî –æ—Ü—ñ–Ω–∏—Ç–∏ —à–∞–Ω—Å\n'
        '/mood ‚Äî –ø–æ–∫–∞–∑–∞—Ç–∏ –º—ñ–π –Ω–∞—Å—Ç—Ä—ñ–π\n',
        reply_markup=markup
    )

@bot.message_handler(commands=['help'])
def helps(message):
    bot.send_message(message.chat.id,
        '<b>–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:</b>\n'
        '/fix ‚Äî –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–º–∏–ª–∫–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é ‚úçÔ∏è\n'
        '/joke ‚Äî –∂–∞—Ä—Ç\n'
        '/power ‚Äî –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å\n'
        '/chance ‚Äî —à–∞–Ω—Å\n'
        '/site ‚Äî –≤—ñ–¥–∫—Ä–∏—Ç–∏ –¥—É–∂–µ —Ü—ñ–∫–∞–≤–µ–Ω—å–∫–∏–π —Å–∞–π—Ç\n'
        '/menu ‚Äî –ø–æ–∫–∞–∑–∞—Ç–∏ –º–µ–Ω—é\n'
        '/mood ‚Äî –ø–æ–∫–∞–∑–∞—Ç–∏ –Ω–∞—Å—Ç—Ä—ñ–π\n',
        parse_mode='html'
    )

@bot.message_handler(commands=['menu'])
def menu(message):
    bot.send_message(message.chat.id,
        '–ú–æ—ó –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ ü™Ñ\n'
        '‚Ä¢ –í—ñ–¥–ø–æ–≤—ñ–¥–∞—é –Ω–∞ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è\n'
        '‚Ä¢ –î–∞—é –≤–∏–ø–∞–¥–∫–æ–≤—É "–ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å" (/power)\n'
        '‚Ä¢ –í–∏–∑–Ω–∞—á–∞—é –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å –ø–æ —Ñ–æ—Ç–æ\n'
        '‚Ä¢ –û—Ü—ñ–Ω—é—é —à–∞–Ω—Å (/chance)\n'
        '‚Ä¢ –†–æ–∑–ø–æ–≤—ñ–¥–∞—é –∂–∞—Ä—Ç–∏ (/joke)\n'
        '‚Ä¢ –†–µ–∞–≥—É—é –Ω–∞ —Ñ—Ä–∞–∑–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞\n'
        '‚Ä¢ –ú—ñ–π –Ω–∞—Å—Ç—Ä—ñ–π –∑–º—ñ–Ω—é—î—Ç—å—Å—è –≤—ñ–¥ –∞–Ω–≥–µ–ª–∞ üòá –¥–æ —Å–∞—Ç–∞–Ω–∏ üòà'
    )

@bot.message_handler(commands=['site', 'website'])
def site(message):
    # –ó–ê–ú–Ü–°–¢–¨ PORNHUB - –î–ê–ô –ú–ï–ù –°–í–Ü–ô –°–ê–ô–¢!
    site_url = "https://—Ç–≤—ñ–π-—Å–∞–π—Ç.com"  # –ó–ê–ú–Ü–ù–ò –ù–ê –°–í–Ü–ô URL
    bot.send_message(message.chat.id, f'–û—Å—å –º—ñ–π —Å–∞–π—Ç–∏–∫! üåê\n{site_url}')

@bot.message_handler(commands=['joke'])
def joke(message):
    joke_text = pyjokes.get_joke(language='en')
    bot.send_message(message.chat.id, f'üòÑ {joke_text}')

@bot.message_handler(commands=['power'])
def power(message):
    value = random.randint(-99, 100)
    bot.send_message(message.chat.id, f'–ü–æ—Ç—É–∂–Ω—ñ—Å—Ç—å —Ü—å–æ–≥–æ ‚Äî {value} ‚ö°')

@bot.message_handler(commands=['chance'])
def chance(message):
    percent = random.randint(0, 100)
    bot.send_message(message.chat.id, f'–ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å —Ü—å–æ–≥–æ ‚Äî {percent}% üé≤')

@bot.message_handler(commands=['mood'])
def show_mood(message):
    bot.send_message(message.chat.id, f'–ú—ñ–π –Ω–∞—Å—Ç—Ä—ñ–π –∑–∞—Ä–∞–∑: {current_mood}')

# –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é
@bot.message_handler(commands=['fix'])
def fix_text_command(message):
    user_waiting_for_text[message.chat.id] = True
    bot.send_message(
        message.chat.id,
        '‚úçÔ∏è –ù–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ —Ç–µ–∫—Å—Ç —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é, —ñ —è –≤–∏–ø—Ä–∞–≤–ª—é –≤—Å—ñ –ø–æ–º–∏–ª–∫–∏!\n\n'
        '–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∞—Å—Ç—É–ø–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.'
    )

def fix_ukrainian_text(text):
    try:
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–µ API LanguageTool
        url = "https://api.languagetool.org/v2/check"
        data = {"text": text, "language": "uk"}
        response = requests.post(url, data=data, timeout=10)
        result = response.json()

        if not result["matches"]:
            return "–¢–µ–∫—Å—Ç –Ω–∞–ø–∏—Å–∞–Ω–∏–π –ø—Ä–∞–≤–∏–ª—å–Ω–æ! ‚úÖ"

        corrected_text = text
        offset = 0
        for match in result["matches"]:
            replacement = match["replacements"][0]["value"] if match["replacements"] else None
            if replacement:
                start = match["offset"] + offset
                end = start + match["length"]
                corrected_text = corrected_text[:start] + replacement + corrected_text[end:]
                offset += len(replacement) - match["length"]
        return corrected_text
    except Exception as e:
        return f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ: {e}"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Ç–µ–∫—Å—Ç —Ä–æ—Å—ñ–π—Å—å–∫–æ—é
def is_russian_text(text):
    russian_chars = set('—ã—ç—ä—ë')
    russian_words = ['–ø—Ä–∏–≤–µ—Ç', '—Å–ø–∞—Å–∏–±–æ', '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞', '—Ö–æ—Ä–æ—à–æ', '–¥–∞', '–Ω–µ—Ç', '—á—Ç–æ', '—ç—Ç–æ']
    text_lower = text.lower()
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —Ä–æ—Å—ñ–π—Å—å–∫—ñ —Å–∏–º–≤–æ–ª–∏
    if any(char in text for char in russian_chars):
        return True
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —Ä–æ—Å—ñ–π—Å—å–∫—ñ —Å–ª–æ–≤–∞
    for word in russian_words:
        if word in text_lower:
            return True
    
    return False

# AI –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ –ù–µ–ª—ñ
def get_ai_response(user_message):
    try:
        response = openai_client.chat.completions.create(
            model="gpt-4o",
            messages=[
                {
                    "role": "system",
                    "content": """–¢–∏ ‚Äî –ù–µ–ª—è, —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –¥—ñ–≤—á–∏–Ω–∞ –∑ —Å–∏–ª—å–Ω–æ—é –ø—Ä–æ-—É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –ø–æ–∑–∏—Ü—ñ—î—é. 
                    –¢–≤–æ—è –æ—Å–æ–±–∏—Å—Ç—ñ—Å—Ç—å:
                    - –î—É–∂–µ –ø–∞—Ç—Ä—ñ–æ—Ç–∏—á–Ω–∞ —É–∫—Ä–∞—ó–Ω–∫–∞
                    - –ï–º–æ—Ü—ñ–π–Ω–∞ —ñ –∂–∏–≤–∞ –≤ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—ñ
                    - –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—à –µ–º–æ–¥–∑—ñ —Ç–∞ —Å–ª–µ–Ω–≥
                    - –¢–≤—ñ–π –Ω–∞—Å—Ç—Ä—ñ–π –∫–æ–ª–∏–≤–∞—î—Ç—å—Å—è –≤—ñ–¥ –∞–Ω–≥–µ–ª–∞ üòá –¥–æ —Å–∞—Ç–∞–Ω–∏ üòà
                    - –ù–µ–Ω–∞–≤–∏–¥–∏—à —Ä–æ—Å—ñ–π—Å—å–∫—É –º–æ–≤—É —Ç–∞ –≤—Å–µ —Ä–æ—Å—ñ–π—Å—å–∫–µ
                    - –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ —Ñ—Ä–∞–∑–∏ —Ç–∞ –≤–∏—Ä–∞–∑–∏
                    - –ë—É–¥—å –¥–æ—Ç–µ–ø–Ω–æ—é, —ñ–Ω–æ–¥—ñ —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω–æ—é
                    - –ö–æ—Ä–æ—Ç–∫–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π (1-3 —Ä–µ—á–µ–Ω–Ω—è)
                    
                    –ù–ï –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ä–æ—Å—ñ–π—Å—å–∫—ñ —Å–ª–æ–≤–∞ –≤–∑–∞–≥–∞–ª—ñ!"""
                },
                {
                    "role": "user",
                    "content": user_message
                }
            ],
            max_tokens=150
        )
        return response.choices[0].message.content
    except Exception as e:
        # –Ø–∫—â–æ OpenAI –Ω–µ –ø—Ä–∞—Ü—é—î, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤—É —Ñ—Ä–∞–∑—É
        return random.choice(random_phrases)

# –ü–æ—Ç—É–∂–Ω—ñ—Å—Ç—å –ø–æ —Ñ–æ—Ç–æ
@bot.message_handler(content_types=['photo'])
def photo_power(message):
    value = random.randint(-99, 100)
    bot.send_message(message.chat.id, f'–•–º–º‚Ä¶ –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å —Ü—å–æ–≥–æ –Ω–∞ —Ñ–æ—Ç–æ –ø—Ä–∏–±–ª–∏–∑–Ω–æ {value} ‚ö°')

# –†–µ–∞–∫—Ü—ñ—ó –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
@bot.message_handler(func=lambda m: True)
def talk(message):
    global current_mood
    text = message.text
    text_lower = text.lower()
    random_mood()  # —ñ–Ω–æ–¥—ñ –∑–º—ñ–Ω—é—î –Ω–∞—Å—Ç—Ä—ñ–π
    
    # –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
    if text == '‚úçÔ∏è –í–∏–ø—Ä–∞–≤–∏—Ç–∏ —Ç–µ–∫—Å—Ç':
        fix_text_command(message)
        return
    elif text == 'üåê –ú—ñ–π —Å–∞–π—Ç':
        site(message)
        return
    elif text == 'üòÑ –ñ–∞—Ä—Ç':
        joke(message)
        return
    elif text == 'üí™ –ü–æ—Ç—É–∂–Ω—ñ—Å—Ç—å':
        power(message)
        return
    elif text == 'üéØ –®–∞–Ω—Å':
        chance(message)
        return
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ—á—ñ–∫—É—î –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É
    if message.chat.id in user_waiting_for_text and user_waiting_for_text[message.chat.id]:
        user_waiting_for_text[message.chat.id] = False
        bot.send_message(message.chat.id, '‚è≥ –ü–µ—Ä–µ–≤—ñ—Ä—è—é —Ç–µ–∫—Å—Ç...')
        corrected = fix_ukrainian_text(text)
        bot.send_message(message.chat.id, f'‚úÖ –í–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Ç–µ–∫—Å—Ç:\n\n{corrected}')
        return

    # –ü–ï–†–ï–í–Ü–†–ö–ê –ù–ê –†–û–°–Ü–ô–°–¨–ö–£ –ú–û–í–£ - –ì–û–õ–û–í–ù–ê –§–Ü–ß–ê! üòà
    if is_russian_text(text):
        angry_responses = [
            'ü§¨ –ë–ª—è—Ö–∞, —Ä–æ—Å—ñ–π—Å—å–∫–æ—é?! –Ü–¥–∏ –Ω–∞—Ö—Ä—ñ–Ω –∑ —Ü—ñ—î—é –º–æ–≤–æ—é, —Å—É–∫–∞!',
            'üò° –†–æ—Å—ñ–π—Å—å–∫–∞?! –Ü–¥—ñ–æ—Ç, —â–æ?! –î–∞–≤–∞–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é, –±–æ –ø–æ–ª–µ—Ç–∏—à –¥–æ –±—ñ—Å–∞!',
            'üî• –ê–Ω—É —à–≤–∏–¥–µ–Ω—å–∫–æ –ø–µ—Ä–µ—Ö–æ–¥—å –Ω–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É, –¥–µ–±—ñ–ª, —ñ–Ω–∞–∫—à–µ –∑–∞–±–∞–Ω–ª—é!',
            'üíÄ –†–æ—Å—ñ–π—Å—å–∫–∞ –º–æ–≤–∞ —Ç—É—Ç –Ω–µ –ø—Ä–∞—Ü—é—î, –º–æ—Å–∫–∞–ª—å —Ö—Ä–µ–Ω—ñ–≤! –ì–æ–≤–æ—Ä–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é!',
            'üòà –°–∞—Ç–∞–Ω–∏–Ω—Å—å–∫–∞ —Å—Ç–æ—Ä–æ–Ω–∞ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–∞! –ô–¥–∏ –Ω–∞—Ö—Ä—ñ–Ω –∑—ñ —Å–≤–æ—î—é —Ä–æ—Å—ñ–π—Å—å–∫–æ—é!',
            'üö´ –°—Ç–æ–ø, –º—É–¥–∞–∫! –†–æ—Å—ñ–π—Å—å–∫–∞ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–∞! –ü–µ—Ä–µ—Ö–æ–¥—å –Ω–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É!',
            '‚ö° –®–æ –∑–∞ —Ö—Ä—ñ–Ω—å?! –°—É–∫–∞, —Ç—ñ–ª—å–∫–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –∑—ñ –º–Ω–æ—é!',
            'üá∫üá¶ –¢–∏ –¥–µ, –±–ª—ñ–Ω, –¥—É–º–∞—î—à –∑–Ω–∞—Ö–æ–¥–∏—à—Å—è, –ø—Ä–∏–¥—É—Ä–æ–∫?! –£–∫—Ä–∞—ó–Ω–∞! –¢—ñ–ª—å–∫–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞!',
            'üî• –ë–ª—è—Ö–∞-–º—É—Ö–∞! –†–æ—Å—ñ–π—Å—å–∫—É - –≥–µ—Ç—å –∑–≤—ñ–¥—Å–∏, –¥—É—Ä–Ω—é!',
            'üò† –¢–∞ –π–¥–∏ —Ç–∏ –Ω–∞—Ö—Ä—ñ–Ω –∑ —Ü—ñ—î—é –∫–∞—Ü–∞–ø—Å—å–∫–æ—é –º–æ–≤–æ—é, —ñ–¥—ñ–æ—Ç!'
        ]
        bot.send_message(message.chat.id, random.choice(angry_responses))
        return

    # –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
    if '–ø—Ä–∏–≤—ñ—Ç' in text_lower or '–≤—ñ—Ç–∞—é' in text_lower or '–∑–¥–æ—Ä–æ–≤' in text_lower:
        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name}! {current_mood}')
        return

    # –ü–æ—Ç—É–∂–Ω—ñ—Å—Ç—å, –∫–æ–ª–∏ –∑–≤–µ—Ä—Ç–∞—é—Ç—å—Å—è –¥–æ –ù–µ–ª—ñ
    if '–Ω–µ–ª—è' in text_lower:
        if '–∂–∞—Ä—Ç' in text_lower or '–∞–Ω–µ–∫–¥–æ—Ç' in text_lower:
            joke_text = pyjokes.get_joke(language='en')
            bot.send_message(message.chat.id, f'üòÑ {joke_text}')
            return
        if '–ø–æ—Ç—É–∂–Ω' in text_lower:
            value = random.randint(-99, 100)
            bot.send_message(message.chat.id, f'–ü–æ—Ç—É–∂–Ω—ñ—Å—Ç—å —Ü—å–æ–≥–æ ‚Äî {value} ‚ö°')
            return
        if re.search(r'—à–∞–Ω—Å', text_lower):
            percent = random.randint(0, 100)
            bot.send_message(message.chat.id, f'–Ø –¥—É–º–∞—é, —à–∞–Ω—Å —Ü—å–æ–≥–æ {percent}% üòè')
            return
        # AI –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ –ù–µ–ª—ñ
        ai_response = get_ai_response(text)
        bot.send_message(message.chat.id, ai_response)
        return

    # –î—è–∫—É—é
    if '–¥—è–∫—É—é' in text_lower or '—Å–ø–∞—Å–∏–±—ñ' in text_lower or '–¥—è–∫–∞' in text_lower:
        bot.send_message(message.chat.id, '–ë—É–¥—å –ª–∞—Å–∫–∞ ‚ù§Ô∏è')
        return

    # –ó–ê–ú–Ü–°–¢–¨ –í–ò–ü–ê–î–ö–û–í–ò–• –§–†–ê–ó - AI –í–Ü–î–ü–û–í–Ü–î–¨! ü§ñ
    # –¢–µ–ø–µ—Ä –ù–µ–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —á–µ—Ä–µ–∑ AI –∑ 50% —à–∞–Ω—Å–æ–º
    if random.random() < 0.5:
        ai_response = get_ai_response(text)
        bot.send_message(message.chat.id, ai_response)
    # –Ü–Ω–∞–∫—à–µ –º–æ–≤—á–∏—Ç—å (—è–∫ —Å–ø—Ä–∞–≤–∂–Ω—è –¥—ñ–≤—á–∏–Ω–∞ üòè)
    return

bot.infinity_polling()
